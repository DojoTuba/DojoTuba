<?php

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../Encontel.php';

/**
 * Test class for Encontel.
 * Generated by PHPUnit on 2011-09-17 at 12:52:24.
 */
class EncontelTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var Encontel
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Encontel;
    }

    public function testEncontelPassandoUmRetornaUm()
    {
        $this->assertEquals(1, $this->object->retornaNumeroDoTelefone('1'));
    }

    public function testEncontelPassandoARetorna2()
    {
        $this->assertEquals(2, $this->object->retornaNumeroDoTelefone('A'));
    }

    public function testEncontelPassandoDRetorna3()
    {
        $this->assertEquals(3, $this->object->retornaNumeroDoTelefone('D'));
    }

    public function testEncontelPassandoABCRetorna222()
    {
        $this->assertEquals('222', $this->object->retornaNumeroDoTelefone('ABC'));
    }

    public function testEncontelPassandoDEFRetorna333()
    {
        $this->assertEquals('333', $this->object->retornaNumeroDoTelefone('DEF'));
    }

    public function testEncontelPassandoGHIRetorna444()
    {
        $this->assertEquals('444', $this->object->retornaNumeroDoTelefone('GHI'));
    }

    public function testEncontelPassandoJKLRetorna555()
    {
        $this->assertEquals('555', $this->object->retornaNumeroDoTelefone('JKL'));
    }
    public function testEncontelPassandoMNORetorna666()
    {
        $this->assertEquals('666', $this->object->retornaNumeroDoTelefone('MNO'));
    }
    public function testEncontelPassandoPQRSRetorna7777()
    {
        $this->assertEquals('7777', $this->object->retornaNumeroDoTelefone('PQRS'));
    }
    public function testEncontelPassandoTUVRetorna888()
    {
        $this->assertEquals('888', $this->object->retornaNumeroDoTelefone('TUV'));
    }
    public function testEncontelPassandoWXYZRetorna9999()
    {
        $this->assertEquals('9999', $this->object->retornaNumeroDoTelefone('WXYZ'));
    }

    public function testEncontelPassandoUmTraco()
    {
        $this->assertEquals('1-', $this->object->retornaNumeroDoTelefone('1-'));
    }

    public function testEncontelPassandoUmTracoH()
    {
        $this->assertEquals('1-4', $this->object->retornaNumeroDoTelefone('1-H'));
    }

    public function testEncontelPassandoUmTracoHO()
    {
        $this->assertEquals('1-46', $this->object->retornaNumeroDoTelefone('1-HO'));
    }
    
    public function testEncontelPassandoZero()
    {
        $this->assertEquals('0', $this->object->retornaNumeroDoTelefone('0'));
    }

     public function testEncontelPassandoAsteriscoRetornaNull()
    {
        $this->assertEquals(null, $this->object->retornaNumeroDoTelefone('*'));
    }

    public function testEncontelPassandoSustenidoRetornaNull()
    {
        $this->assertEquals(null, $this->object->retornaNumeroDoTelefone('#'));
    }

     public function testEncontelPassandoHomeSweetHome()
    {
        $this->assertEquals('1-4663-79338-4663',
                $this->object->retornaNumeroDoTelefone('1-HOME-SWEET-HOME'));
    }

    public function testEncontelPassandoMyMiserableJob()
    {
        $this->assertEquals('69-647372253-562',
                $this->object->retornaNumeroDoTelefone('MY-MISERABLE-JOB'));
    }

    protected function tearDown()
    {
        
    }

}